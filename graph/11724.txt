package main

import (
	"bufio"
	"os"
	"strconv"
)

var (
	sc        *bufio.Scanner
	wr        *bufio.Writer
	N, M, cnt int
	arr       [1001][1001]bool
	visited   []bool
	dx, dy    [4]int
)

func init() {
	sc = bufio.NewScanner(os.Stdin)
	sc.Split(bufio.ScanWords)
	wr = bufio.NewWriter(os.Stdout)
	dx = [4]int{0, 0, 1, -1}
	dy = [4]int{1, -1, 0, 0}
}

func main() {
	defer wr.Flush()
	N = scanInt()
	M = scanInt()
	visited = make([]bool, N+1)
	for i := 0; i < M; i++ {
		u, v := scanInt(), scanInt()
		arr[u][v] = true
		arr[v][u] = true
	}
	for i := 1; i <= N; i++ {
		if !visited[i] {
			visited[i] = true
			dfs(i)
			cnt++
		}
	}
	wr.WriteString(strconv.Itoa(cnt))
}

func dfs(index int) {
	for i := 1; i <= N; i++ {
		if !visited[i] && arr[index][i] {
			visited[i] = true
			dfs(i)
		}
	}
}

func scanInt() (n int) {
	sc.Scan()
	n, _ = strconv.Atoi(sc.Text())
	return
}
