package main

import (
	"bufio"
	"os"
	"strconv"
)

var (
	sc           *bufio.Scanner
	wr           *bufio.Writer
	X, Y, K, cnt int
	bug          [50][50]bool
	dx, dy       [4]int
)

func init() {
	sc = bufio.NewScanner(os.Stdin)
	sc.Split(bufio.ScanWords)
	wr = bufio.NewWriter(os.Stdout)
	dx = [4]int{0, 0, 1, -1}
	dy = [4]int{1, -1, 0, 0}
}

func main() {
	defer wr.Flush()
	repeat := scanInt()
	var result []int
	for i := 0; i < repeat; i++ {
		X = scanInt()
		Y = scanInt()
		K = scanInt()
		for j := 0; j < K; j++ {
			x := scanInt()
			y := scanInt()
			bug[y][x] = true
		}
		cnt = 0
		for a := 0; a < Y; a++ {
			for b := 0; b < X; b++ {
				if bug[a][b] {
					cnt++
					bug[a][b] = false
					dfs(a, b)
				}
			}
		}
		result = append(result, cnt)
	}

	for i := 0; i < repeat; i++ {
		wr.WriteString(strconv.Itoa(result[i]) + "\n")
	}
}

func dfs(y, x int) {
	for i := 0; i < 4; i++ {
		newY := y + dy[i]
		newX := x + dx[i]
		if check(newY, newX) && bug[newY][newX] {
			bug[newY][newX] = false
			dfs(newY, newX)
		}
	}
}

func check(y, x int) bool {
	if y < 0 || y >= Y || x < 0 || x >= X {
		return false
	}
	return true
}

func scanInt() (n int) {
	sc.Scan()
	n, _ = strconv.Atoi(sc.Text())
	return
}
